// Generated by view binder compiler. Do not edit!
package mc.fragments.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mc.fragments.R;

public final class FragmentMarcadorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView numPregunta;

  @NonNull
  public final TextView puntos;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView tiempo;

  private FragmentMarcadorBinding(@NonNull ConstraintLayout rootView, @NonNull TextView numPregunta,
      @NonNull TextView puntos, @NonNull TextView textView2, @NonNull TextView textView3,
      @NonNull TextView textView4, @NonNull TextView tiempo) {
    this.rootView = rootView;
    this.numPregunta = numPregunta;
    this.puntos = puntos;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.tiempo = tiempo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMarcadorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMarcadorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_marcador, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMarcadorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.numPregunta;
      TextView numPregunta = ViewBindings.findChildViewById(rootView, id);
      if (numPregunta == null) {
        break missingId;
      }

      id = R.id.puntos;
      TextView puntos = ViewBindings.findChildViewById(rootView, id);
      if (puntos == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.tiempo;
      TextView tiempo = ViewBindings.findChildViewById(rootView, id);
      if (tiempo == null) {
        break missingId;
      }

      return new FragmentMarcadorBinding((ConstraintLayout) rootView, numPregunta, puntos,
          textView2, textView3, textView4, tiempo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
